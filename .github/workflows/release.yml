name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Get tag name
        id: tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build for multiple platforms
        run: |
          mkdir -p releases
          platforms=("linux/amd64" "linux/arm64" "darwin/amd64" "darwin/arm64" "windows/amd64")
          for platform in "${platforms[@]}"; do
            IFS="/" read -r -a parts <<< "$platform"
            os="${parts[0]}"
            arch="${parts[1]}"
            
            echo "Building for $os/$arch..."
            
            # Set binary name with .exe extension for Windows
            binary_name="gollmperf-${os}-${arch}"
            if [ "$os" = "windows" ]; then
              binary_name="${binary_name}.exe"
            fi
            
            # Build binary
            CGO_ENABLED=0 GOOS=$os GOARCH=$arch go build -o "$binary_name" .
            
            # Create temporary directory for packaging
            mkdir -p releases/tmp/gollmperf
            cp "$binary_name" releases/tmp/gollmperf/
            
            # Copy config files
            cp -r configs/ releases/tmp/gollmperf/
            
            # Copy example files
            cp -r examples/ releases/tmp/gollmperf/
            
            # Copy README files
            cp README.md releases/tmp/gollmperf/
            cp README_zh.md releases/tmp/gollmperf/
            
            # Copy LICENSE file
            cp LICENSE releases/tmp/gollmperf/
            
            # Create package
            cd releases/tmp
            if [ "$os" = "windows" ]; then
              zip -r "../gollmperf-${{ env.TAG_NAME }}-${os}-${arch}.zip" gollmperf
            else
              tar -czf "../gollmperf-${{ env.TAG_NAME }}-${os}-${arch}.tar.gz" gollmperf
            fi
            cd ../..
            rm -rf releases/tmp
          done

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            releases/gollmperf-${{ env.TAG_NAME }}-*.tar.gz
            releases/gollmperf-${{ env.TAG_NAME }}-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}